{"ast":null,"code":"var _jsxFileName = \"G:\\\\Programming\\\\projects\\\\WeatherApp\\\\weather-app\\\\src\\\\components\\\\search\\\\search.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { geoApiOptions, GEO_API_URL } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    onSearchChange\n  } = _ref;\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`, geoApiOptions).then(response => response.json()).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      return data.map(city => ({\n        value: `${city.latitude} ${city.longitude}`,\n        label: `${city.name}, ${city.countryCode}`\n      }));\n    }).catch(error => {\n      console.error(error);\n      return {\n        options: []\n      };\n    });\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nSearch.propTypes = {\n  onSearchChange: PropTypes.func.isRequired\n};\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","PropTypes","AsyncPaginate","geoApiOptions","GEO_API_URL","jsxDEV","_jsxDEV","Search","_ref","_s","onSearchChange","search","setSearch","useState","loadOptions","inputValue","fetch","then","response","json","_ref2","data","map","city","value","latitude","longitude","label","name","countryCode","catch","error","console","options","handleOnChange","searchData","placeholder","debounceTimeout","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["G:/Programming/projects/WeatherApp/weather-app/src/components/search/search.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { geoApiOptions, GEO_API_URL } from \"../../api\";\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n  const [search, setSearch] = useState(null);\r\n\r\n  const loadOptions = (inputValue) => {\r\n    return fetch(\r\n      `${GEO_API_URL}/cities?minPopulation=100000&namePrefix=${inputValue}`,\r\n      geoApiOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then(({ data }) => {\r\n        return data.map((city) => ({\r\n          value: `${city.latitude} ${city.longitude}`,\r\n          label: `${city.name}, ${city.countryCode}`,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        return { options: [] };\r\n      });\r\n  };\r\n\r\n  const handleOnChange = (searchData) => {\r\n    setSearch(searchData);\r\n    onSearchChange(searchData);\r\n  };\r\n\r\n  return (\r\n    <AsyncPaginate\r\n      placeholder=\"Search for city\"\r\n      debounceTimeout={600}\r\n      value={search}\r\n      onChange={handleOnChange}\r\n      loadOptions={loadOptions}\r\n    />\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  onSearchChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,aAAa,EAAEC,WAAW,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,WAAW,GAAIC,UAAU,IAAK;IAClC,OAAOC,KAAK,CACT,GAAEZ,WAAY,2CAA0CW,UAAW,EAAC,EACrEZ,aAAa,CACd,CACEc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAACG,KAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,KAAA;MACb,OAAOC,IAAI,CAACC,GAAG,CAAEC,IAAI,KAAM;QACzBC,KAAK,EAAG,GAAED,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,SAAU,EAAC;QAC3CC,KAAK,EAAG,GAAEJ,IAAI,CAACK,IAAK,KAAIL,IAAI,CAACM,WAAY;MAC3C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO;QAAEE,OAAO,EAAE;MAAG,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,cAAc,GAAIC,UAAU,IAAK;IACrCvB,SAAS,CAACuB,UAAU,CAAC;IACrBzB,cAAc,CAACyB,UAAU,CAAC;EAC5B,CAAC;EAED,oBACE7B,OAAA,CAACJ,aAAa;IACZkC,WAAW,EAAC,iBAAiB;IAC7BC,eAAe,EAAE,GAAI;IACrBb,KAAK,EAAEb,MAAO;IACd2B,QAAQ,EAAEJ,cAAe;IACzBpB,WAAW,EAAEA;EAAY;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzB;AAEN,CAAC;AAACjC,EAAA,CAnCIF,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAqCZA,MAAM,CAACqC,SAAS,GAAG;EACjBlC,cAAc,EAAET,SAAS,CAAC4C,IAAI,CAACC;AACjC,CAAC;AAED,eAAevC,MAAM;AAAC,IAAAoC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}